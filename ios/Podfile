platform :ios, '14.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Flutter helper
flutter_root = ENV['FLUTTER_ROOT']
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'))

flutter_ios_podfile_setup

target 'Runner' do
  # يخفّض مشاكل الربط مع البلجنز عند الأرشفة
  use_frameworks! :linkage => :static

  # ⚠️ جرّب إبقاؤه مفعّلًا أولاً. إن ظهر Flutter.h not found عند Archive فقط، علّقه.
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # إصلاح تداخلات FirebaseCoreInternal عند استخدام modular headers
  pod 'GoogleUtilities', :modular_headers => true
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    # إعدادات Flutter الافتراضية الضرورية
    flutter_additional_ios_build_settings(t)

    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['SWIFT_VERSION'] = '5.0'

      # ✅ حقن مسار ترويسات Flutter صراحةً ليساعد في الأرشفة
      header_search = config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
      unless header_search.include?('$(PODS_ROOT)/Flutter/Flutter.framework/Headers')
        header_search << '$(PODS_ROOT)/Flutter/Flutter.framework/Headers'
      end
    end
  end

  # جعل Pod "Flutter" يُعرّف كمودول (يساعد بعض البيئات أثناء الـ Archive)
  flutter_target = installer.pods_project.targets.find { |x| x.name == 'Flutter' }
  if flutter_target
    flutter_target.build_configurations.each do |config|
      config.build_settings['DEFINES_MODULE'] = 'YES'
    end
  end
end
